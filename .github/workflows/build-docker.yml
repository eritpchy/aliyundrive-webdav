# This is a basic workflow to help you get started with Actions

name: Build Docker Image

# Controls when the action will run.
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  # schedule:
  #   - cron: "0 0 * * */3"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

env:
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Get current date
        id: date
        run: echo "::set-output name=today::$(date +'%Y%m%d')"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      -
        name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      -
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        run: chmod +x ${{github.workspace}}/gradlew
      # Set VERSION_INFORMATION
      -
        run: echo "VERSION_INFORMATION=$(${{github.workspace}}/gradlew -q ciPrintVersionInformation)" >> $GITHUB_ENV
      -
        run: echo "VERSION_INFORMATION=$(${{github.workspace}}/gradlew -q ciPrintVersionInformation)" >> $GITHUB_ENV
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            eritpchy/aliyundrive-webdav:latest
            eritpchy/aliyundrive-webdav:${{ env.VERSION_INFORMATION }}-${{ steps.date.outputs.today }}
            eritpchy/webdav-aliyundriver:latest
            eritpchy/webdav-aliyundriver:${{ env.VERSION_INFORMATION }}-${{ steps.date.outputs.today }}

